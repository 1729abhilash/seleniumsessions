**Learn How Selenium WebDriver works internally:

When the automation script is executed, the following steps happen:

+for each Selenium command, a HTTP request is created and sent to the browser driver
+the browser driver uses a HTTP server for getting the HTTP requests
the HTTP server determines the steps needed for implementing the Selenium command
+the implementation steps are executed on the browser
+the execution status is sent back to the HTTP server
+the HTTP server sends the status back to the automation script

there are majorly four components-;
                                                                          http pver http server
selenium client library       json wire protocol over htpp   browser drivers             real browsers
ruby                                                            chrome,safari                 chrome,ff
csharp
java
python
client library sending the request throught json over http  we are sednign the request to driver then got
to real broweer then we get response back same as

everything is available in the rest apis
selenium architecture based on rest protocol

When the automation script is executed, the following steps happen:

+for each Selenium command, a HTTP request is created and sent to the browser driver
+the browser driver uses a HTTP server for getting the HTTP requests
the HTTP server determines the steps needed for implementing the Selenium command
+the implementation steps are executed on the browser
+the execution status is sent back to the HTTP server
+the HTTP server sends the status back to the automation script
